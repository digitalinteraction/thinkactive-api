'use strict';

module.exports = {
  up: (queryInterface, Sequelize) => {
    return queryInterface.bulkInsert('questions', [{
      id: 1,
      level: 1,
      text: 'Can you find an example of the Dairy food group?',
      questionState: JSON.stringify([0, 0, 1, 0, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=3',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 2,
      level: 2,
      text: 'My bones feel weak... what could I eat to help?',
      questionState: JSON.stringify([0, 0, 1, 0, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=3',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 3,
      level: 1,
      text: 'What food might be in the Protein food group?',
      questionState: JSON.stringify([0, 0, 1, 0, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=2',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 4,
      level: 2,
      text: 'My muscles feel weak... what could I eat to help?',
      questionState: JSON.stringify([0, 0, 1, 0, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=2',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 5,
      level: 1,
      text: 'Can you find an example of a High Energy food?',
      questionState: JSON.stringify([0, 0, 1, 0, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'energy=3',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 6,
      level: 2,
      text: 'I am low on energy... what could I eat to help?',
      questionState: JSON.stringify([0, 0, 1, 0, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'energy=3',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 7,
      level: 3,
      text: 'I feel sick, maybe I have eaten too much of something...',
      questionState: JSON.stringify([0, 1, 1, 1, 0, 1]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=4,group=0',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 8,
      level: 1,
      text: 'I lack vitamins and minerals. Is there food with vitamins and minerals?',
      questionState: JSON.stringify([0, 1, 1, 0, 0, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=1',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 9,
      level: 1,
      text: 'Could you give me some protein?',
      questionState: JSON.stringify([0, 0, 1, 1, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=2',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 10,
      level: 1,
      text: 'Could you give me one of the 5-a-day?',
      questionState: JSON.stringify([0, 1, 1, 1, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=1',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 11,
      level: 1,
      text: 'Can I get some Carbs?',
      questionState: JSON.stringify([0, 1, 1, 0, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=0',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 12,
      level: 1,
      text: 'Can I have a healthy snack please?',
      questionState: JSON.stringify([0, 1, 1, 1, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=1',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 13,
      level: 2,
      text: 'A good and balanced diet should have a variety of food, could you give me something new but healthy?',
      questionState: JSON.stringify([0, 1, 1, 1, 1, 0]),
      answerType: 1,
      answerRequirement: 0,
      answerContents: 'energy=3,fat=0,sugar=0',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 14,
      level: 1,
      text: 'I am bored of "steak", could I have an alternative?',
      questionState: JSON.stringify([0, 0, 1, 1, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=2',
      answerRestrictions: 'name=steak',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 15,
      level: 1,
      text: 'Can I get an alternative to "milk"?',
      questionState: JSON.stringify([0, 1, 1, 1, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=3',
      answerRestrictions: 'name=milk',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 16,
      level: 1,
      text: 'I feel like eating starchy food, could you give me some?',
      questionState: JSON.stringify([0, 1, 1, 0, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=0',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 17,
      level: 2,
      text: 'I feel like being a vegetarian now, could you feed me a veggie protein?',
      questionState: JSON.stringify([0, 0, 1, 1, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=2,name=beans',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 18,
      level: 1,
      text: '"Chocolate" is tasty, but it has high fat and sugar, could you give me a healthier alternative?',
      questionState: JSON.stringify([0, 1, 1, 0, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=1',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 19,
      level: 1,
      text: 'I am really hungry, could you feed me something?',
      questionState: JSON.stringify([0, 1, 1, 1, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=0,group=1,group=2,group=3,group=4',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 20,
      level: 1,
      text: 'What is your favourite food? Can I have some?',
      questionState: JSON.stringify([0, 1, 1, 1, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=0,group=1,group=2,group=3,group=4',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 21,
      level: 1,
      text: 'Let\'s have breakfast, what would you choose that is healthy?' ,
      questionState: JSON.stringify([0, 1, 1, 1, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=0,group=1,group=2,group=3,group=4',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 22,
      level: 1,
      text: 'What about lunch? Something healthy?',
      questionState: JSON.stringify([0, 1, 1, 1, 0, 1]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=0,group=1,group=2,group=3,group=4',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 23,
      level: 2,
      text: 'I am a growing child, could you feed me something to help me grow?',
      questionState: JSON.stringify([0, 0, 1, 1, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=2',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 24,
      level: 2,
      text: 'I need energy, could you feed me something that would give me energy?',
      questionState: JSON.stringify([0, 1, 1, 0, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=carb',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 25,
      level: 2,
      text: 'I need A LOT of energy, could you food me something with A LOT of emergy but low in fat and sugar please?',
      questionState: JSON.stringify([0, 1, 1, 0, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=0,energy=3,fat=0,sugar=0',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 26,
      level: 2,
      text: 'Could you feed me something that help me going to toliet regularly?',
      questionState: JSON.stringify([0, 1, 1, 1, 0, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=1',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 27,
      level: 2,
      text: 'I have done a lot of exercise, and my muscles hurt. Could you feed me something that help repair my muscles?',
      questionState: JSON.stringify([0, 0, 1, 1, 0, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=2',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 28,
      level: 2,
      text: 'Could you give me something that would make me feel refreshed?',
      questionState: JSON.stringify([0, 1, 0, 1, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: '',
      answerRestrictions: 'group=1',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 29,
      level: 2,
      text: 'I want good skin. Could you feed me something that is good for my skin?',
      questionState: JSON.stringify([0, 1, 1, 1, 0, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'group=1',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 30,
      level: 2,
      text: 'I am not doing much today, so I would like low energy food. Could you feed me something with low energy?',
      questionState: JSON.stringify([0, 1, 1, 1, 1, 1]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'energy=0',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      id: 31,
      level: 2,
      text: 'I am doing a lot of outdoor activities today, feed me something with high energy, please.',
      questionState: JSON.stringify([0, 1, 1, 0, 1, 0]),
      answerType: 0,
      answerRequirement: 0,
      answerContents: 'energy=3',
      answerRestrictions: '',
      resultState: JSON.stringify([1, 1, 1, 1, 1, 1]),
      createdAt: new Date(),
      updatedAt: new Date()
    }], {});
  },

  down: (queryInterface, Sequelize) => {
    /*
      Add reverting commands here.
      Return a promise to correctly handle asynchronicity.

      Example:
      return queryInterface.bulkDelete('Person', null, {});
    */

    return queryInterface.bulkDelete('questions', null, {});
  }
};
